variables:
   AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
   AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
   S3_BUCKET: $S3_BUCKET
   S3_KEY: $S3_KEY
   CARAMBOLAS: "carambolas quadradas never die"
   CLOUD_FRONT_DIST_ID: $CLOUD_FRONT_DIST_ID
   CLOUD_FRONT_PATH: $CLOUD_FRONT_PATH
   PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Scripts
## Compandos para serem reaproveitados nos jobs
image: node

.install: &install
  - yarn

.lint_css: &lint_css
  - yarn run lint:css

.lint_js: &lint_js
  - yarn run lint:js
  
.test: &test
  - yarn test:ci

.build: &build
  - yarn build

# Definicoes de stages(areas em que relacionamos os jobs)
stages:
  - prepare
  - code_quality
  - test
  - build    
  - deploy

# Definições de cash
cache:
  untracked: true
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .cache/pip
    - venv/
  policy: pull-push

# Instalar dependencias do projeto
install:
  stage: prepare
  script: *install

# Verificação da formatação do código css
lint:style:
  stage: code_quality
  script: *lint_css

# Verificação de formatação do código javascript/react
lint:script:
  stage: code_quality
  script: *lint_js

# Rodar testes unitarios
unity_test:
  stage: test
  script: *test

# Construir artefato
build:
  stage: build
  script: *build
  artifacts:
    paths:
      - build/

# Deploy de uma Release para homologacao
deploy:release:
  stage: deploy
  script:
    - echo "deploy realeses"
  artifacts:
    paths:
      - build/
  only:
    variables:
      - $CI_COMMIT_REF_NAME =~ /^release\//

# Deploy de uma hotfix para Homologacao
deploy:hotfix:
  stage: deploy
  script:
    - echo "deploy hotfix"
  artifacts:
    paths:
      - build/
  only:
    variables:
      - $CI_COMMIT_REF_NAME =~ /^hotfix\//

# Deploy na master ativado manualmente
deploy:production:
  stage: deploy 
  script:
    - echo "deplou to production"
  artifacts:
    paths:
      - build/
  when: manual
  only:
    - master
    
## comandos relacionados a aws

# aws config cli user

# aws submit to s3

# aws cache invalidate


